{"ast":null,"code":"// frontend/src/utils/api.js\nimport axios from 'axios';\n\n// Create configured axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add authentication token to requests\napi.interceptors.request.use(config => {\n  const userData = localStorage.getItem('user');\n  if (userData) {\n    try {\n      const user = JSON.parse(userData);\n      if (user !== null && user !== void 0 && user.token) {\n        config.headers.Authorization = `Bearer ${user.token}`;\n      }\n    } catch (error) {\n      console.error('Error parsing user data:', error);\n    }\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Handle API response errors\napi.interceptors.response.use(response => response.data, error => {\n  var _error$response, _error$response2, _error$response2$data, _error$response3, _error$response4;\n  // Handle unauthorized (401) responses\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n\n  // Handle other errors\n  const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'An unknown error occurred';\n  return Promise.reject({\n    message: errorMessage,\n    status: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status,\n    data: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data\n  });\n});\n\n// Export the configured instance\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","userData","localStorage","getItem","user","JSON","parse","token","Authorization","error","console","Promise","reject","response","data","_error$response","_error$response2","_error$response2$data","_error$response3","_error$response4","status","removeItem","window","location","href","errorMessage","message"],"sources":["C:/Community-Board/frontend/src/utils/api.js"],"sourcesContent":["// frontend/src/utils/api.js\r\nimport axios from 'axios';\r\n\r\n// Create configured axios instance\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Add authentication token to requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (userData) {\r\n      try {\r\n        const user = JSON.parse(userData);\r\n        if (user?.token) {\r\n          config.headers.Authorization = `Bearer ${user.token}`;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error parsing user data:', error);\r\n      }\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Handle API response errors\r\napi.interceptors.response.use(\r\n  (response) => response.data,\r\n  (error) => {\r\n    // Handle unauthorized (401) responses\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    \r\n    // Handle other errors\r\n    const errorMessage = error.response?.data?.message || \r\n                        error.message || \r\n                        'An unknown error occurred';\r\n    \r\n    return Promise.reject({\r\n      message: errorMessage,\r\n      status: error.response?.status,\r\n      data: error.response?.data\r\n    });\r\n  }\r\n);\r\n\r\n// Export the configured instance\r\nexport default api;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAE7C,IAAIF,QAAQ,EAAE;IACZ,IAAI;MACF,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;MACjC,IAAIG,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEG,KAAK,EAAE;QACfP,MAAM,CAACJ,OAAO,CAACY,aAAa,GAAG,UAAUJ,IAAI,CAACG,KAAK,EAAE;MACvD;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF;EAEA,OAAOT,MAAM;AACf,CAAC,EACAS,KAAK,IAAK;EACT,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAnB,GAAG,CAACO,YAAY,CAACgB,QAAQ,CAACd,GAAG,CAC1Bc,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAC1BL,KAAK,IAAK;EAAA,IAAAM,eAAA,EAAAC,gBAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,gBAAA;EACT;EACA,IAAI,EAAAJ,eAAA,GAAAN,KAAK,CAACI,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBK,MAAM,MAAK,GAAG,EAAE;IAClClB,YAAY,CAACmB,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;;EAEA;EACA,MAAMC,YAAY,GAAG,EAAAT,gBAAA,GAAAP,KAAK,CAACI,QAAQ,cAAAG,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBF,IAAI,cAAAG,qBAAA,uBAApBA,qBAAA,CAAsBS,OAAO,KAC9BjB,KAAK,CAACiB,OAAO,IACb,2BAA2B;EAE/C,OAAOf,OAAO,CAACC,MAAM,CAAC;IACpBc,OAAO,EAAED,YAAY;IACrBL,MAAM,GAAAF,gBAAA,GAAET,KAAK,CAACI,QAAQ,cAAAK,gBAAA,uBAAdA,gBAAA,CAAgBE,MAAM;IAC9BN,IAAI,GAAAK,gBAAA,GAAEV,KAAK,CAACI,QAAQ,cAAAM,gBAAA,uBAAdA,gBAAA,CAAgBL;EACxB,CAAC,CAAC;AACJ,CACF,CAAC;;AAED;AACA,eAAexB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}