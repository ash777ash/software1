{"ast":null,"code":"import React,{useState}from'react';import{Link,useNavigate}from'react-router-dom';import LoginForm from'../components/Auth/LoginForm';import'./LoginPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginPage=()=>{const[error,setError]=useState('');const[loading,setLoading]=useState(false);const navigate=useNavigate();const handleLogin=async credentials=>{console.log('Login attempt:',credentials);setError('');setLoading(true);try{const response=await fetch('http://localhost:4000/auth/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(credentials)});const data=await response.json();if(data.success){console.log('Login successful:',data.user);// Store user info in localStorage\nlocalStorage.setItem('user',JSON.stringify(data.user));// Trigger a storage event for navbar to update\nwindow.dispatchEvent(new Event('storage'));// Redirect to home page\nnavigate('/');}else{setError(data.message||'Login failed');}}catch(err){console.error('Login error:',err);setError('Failed to connect to server. Please try again.');}finally{setLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"login-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsx(LoginForm,{onLogin:handleLogin,error:error,loading:loading}),/*#__PURE__*/_jsxs(\"p\",{className:\"register-link\",children:[\"Don't have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/register\",children:\"Register here\"})]})]})});};export default LoginPage;","map":{"version":3,"names":["React","useState","Link","useNavigate","LoginForm","jsx","_jsx","jsxs","_jsxs","LoginPage","error","setError","loading","setLoading","navigate","handleLogin","credentials","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","success","user","localStorage","setItem","window","dispatchEvent","Event","message","err","className","children","onLogin","to"],"sources":["C:/Users/Kiuadmin/Desktop/annaa/Community-Board/frontend/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport LoginForm from '../components/Auth/LoginForm';\r\nimport './LoginPage.css';\r\n\r\nconst LoginPage = () => {\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (credentials) => {\r\n    console.log('Login attempt:', credentials);\r\n    setError('');\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:4000/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(credentials)\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        console.log('Login successful:', data.user);\r\n        // Store user info in localStorage\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        // Trigger a storage event for navbar to update\r\n        window.dispatchEvent(new Event('storage'));\r\n        // Redirect to home page\r\n        navigate('/');\r\n      } else {\r\n        setError(data.message || 'Login failed');\r\n      }\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      setError('Failed to connect to server. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-container\">\r\n        <h2>Login</h2>\r\n        <LoginForm onLogin={handleLogin} error={error} loading={loading} />\r\n        <p className=\"register-link\">\r\n          Don't have an account? <Link to=\"/register\">Register here</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,IAAI,CAAEC,WAAW,KAAQ,kBAAkB,CACpD,MAAO,CAAAC,SAAS,KAAM,8BAA8B,CACpD,MAAO,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzB,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAAAa,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAY,WAAW,CAAG,KAAO,CAAAC,WAAW,EAAK,CACzCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEF,WAAW,CAAC,CAC1CL,QAAQ,CAAC,EAAE,CAAC,CACZE,UAAU,CAAC,IAAI,CAAC,CAEhB,GAAI,CACF,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,kCAAkC,CAAE,CAC/DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACT,WAAW,CAClC,CAAC,CAAC,CAEF,KAAM,CAAAU,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAElC,GAAID,IAAI,CAACE,OAAO,CAAE,CAChBX,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEQ,IAAI,CAACG,IAAI,CAAC,CAC3C;AACAC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEP,IAAI,CAACC,SAAS,CAACC,IAAI,CAACG,IAAI,CAAC,CAAC,CACvD;AACAG,MAAM,CAACC,aAAa,CAAC,GAAI,CAAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAC1C;AACApB,QAAQ,CAAC,GAAG,CAAC,CACf,CAAC,IAAM,CACLH,QAAQ,CAACe,IAAI,CAACS,OAAO,EAAI,cAAc,CAAC,CAC1C,CACF,CAAE,MAAOC,GAAG,CAAE,CACZnB,OAAO,CAACP,KAAK,CAAC,cAAc,CAAE0B,GAAG,CAAC,CAClCzB,QAAQ,CAAC,gDAAgD,CAAC,CAC5D,CAAC,OAAS,CACRE,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,mBACEP,IAAA,QAAK+B,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzB9B,KAAA,QAAK6B,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BhC,IAAA,OAAAgC,QAAA,CAAI,OAAK,CAAI,CAAC,cACdhC,IAAA,CAACF,SAAS,EAACmC,OAAO,CAAExB,WAAY,CAACL,KAAK,CAAEA,KAAM,CAACE,OAAO,CAAEA,OAAQ,CAAE,CAAC,cACnEJ,KAAA,MAAG6B,SAAS,CAAC,eAAe,CAAAC,QAAA,EAAC,yBACJ,cAAAhC,IAAA,CAACJ,IAAI,EAACsC,EAAE,CAAC,WAAW,CAAAF,QAAA,CAAC,eAAa,CAAM,CAAC,EAC/D,CAAC,EACD,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA7B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}